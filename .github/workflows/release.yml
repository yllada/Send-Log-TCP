name: Release Workflow

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.23
        id: go

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build Go Backend
        env:
          GOOS: windows 
          GOARCH: amd64      
        run: go build -o SendLog-Syslog.exe -v ./

      - name: Upload Backend Build
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: ./SendLog-Syslog.exe

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ^18.0

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Upload Frontend Build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  build-installer:
    needs: [build-backend, build-frontend]
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Backend Build
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: backend-build

      - name: Download Frontend Build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend-build

      - name: Create output directory
        run: mkdir -p ./output

      - name: Install Inno Setup
        run: choco install innosetup --yes

      - name: Run Inno Setup Script
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" ./inno-compiler.iss
        env:
          MyAppDir: ${{ github.workspace }}

      - name: Verify output directory contents
        run: ls -R ./output

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: installer
          path: ./output/SendLog-Syslog.exe

  release:
    needs: [build-installer]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download Installer Artifact
        uses: actions/download-artifact@v4
        with:
          name: installer
          path: ./output

      - name: Verify output directory contents
        run: ls -R ./output

      - name: Check if installer exists
        run: |
          if [ ! -f ./output/SendLog-Syslog.exe ]; then
            echo "Error: ./output/SendLog-Syslog.exe not found"
            exit 1
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: ./CHANGELOG.md
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Save Release Upload URL
        run: echo "UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/SendLog-Syslog.exe
          asset_name: installer.exe
          asset_content_type: application/octet-stream
