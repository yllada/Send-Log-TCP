on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-wails-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.0.0  

      - name: Set up Go
        uses: actions/setup-go@v3.0.0  
        with:
          go-version: '^1.23'
        id: go

      - name: Set up Node.js
        uses: actions/setup-node@v3.0.0  
        with:
          node-version: '^20.0'

      - name: Cache Go modules
        uses: actions/cache@v3.0.0  
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache Node modules
        uses: actions/cache@v3.0.0  
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build Wails App
        run: wails build -platform windows/amd64

      - name: Upload Wails Build
        uses: actions/upload-artifact@v3.0.0  
        with:
          name: wails-build
          path: ./build/bin/Sendlog-Syslog.exe  

  create-release:
    needs: build-wails-app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.0.0  

      - name: Download Wails Build
        uses: actions/download-artifact@v3.0.0  
        with:
          name: wails-build
          path: ./build 

      - name: Verify output directory contents
        run: ls -R ./build

      - name: Check GitHub Token Permissions
        run: |
          echo "Checking GitHub Token Permissions..."
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: ./CHANGELOG.md
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Save Release Upload URL
        run: echo "UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/Sendlog-Syslog.exe
          asset_name: Sendlog-Syslog.exe  
          asset_content_type: application/octet-stream

  notify:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Send notification
        run: echo "Release ${{ github.ref }} has been created successfully!"